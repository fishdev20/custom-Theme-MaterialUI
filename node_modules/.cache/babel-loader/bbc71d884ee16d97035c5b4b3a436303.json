{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\minhf\\\\Documents\\\\Repository-Github\\\\custom-theme-MaterialUI\\\\src\\\\context\\\\ThemeContextProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useGlobal } from 'reactn';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { LinearProgress } from '@material-ui/core';\nexport const UseThemeContext = /*#__PURE__*/createContext({});\nexport const ThemeProviderContext = ({\n  children\n}) => {\n  _s();\n\n  const theme = useThemeConText();\n  if (!theme) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(UseThemeContext.Provider, {\n    value: theme,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ThemeProviderContext, \"4O8NBVthaGvxTl6SGsq9rvJK+E8=\", false, function () {\n  return [useThemeConText];\n});\n\n_c = ThemeProviderContext;\nexport const useThemeConText = () => {\n  _s2();\n\n  const [colors] = useGlobal('colors');\n  const [theme, setTheme] = useState(createMuiTheme({}));\n  useEffect(() => {\n    if (!(colors === null || colors === void 0 ? void 0 : colors.primary)) return;\n    setTheme(createMuiTheme({\n      props: {\n        primaryColor: colors.primary,\n        secondaryColor: colors.secondary\n      } // and more setting to use\n\n    }));\n  }, [colors]);\n  return theme;\n};\n\n_s2(useThemeConText, \"WUjUCpW9mp9kyTh8UK/LkFAjuzY=\", false, function () {\n  return [useGlobal];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProviderContext\");","map":{"version":3,"sources":["C:/Users/minhf/Documents/Repository-Github/custom-theme-MaterialUI/src/context/ThemeContextProvider.js"],"names":["React","createContext","useEffect","useState","useGlobal","createMuiTheme","ThemeProvider","LinearProgress","UseThemeContext","ThemeProviderContext","children","theme","useThemeConText","colors","setTheme","primary","props","primaryColor","secondaryColor","secondary"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAAQC,cAAR,EAAwBC,aAAxB,QAA4C,0BAA5C;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AAEA,OAAO,MAAMC,eAAe,gBAAGP,aAAa,CAAC,EAAD,CAArC;AAEP,OAAO,MAAMQ,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAClD,QAAMC,KAAK,GAAGC,eAAe,EAA7B;AAEA,MAAI,CAACD,KAAL,EACE,oBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEA,KAAjC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,KAAtB;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CAbM;;GAAMD,oB;UACGG,e;;;KADHH,oB;AAeb,OAAO,MAAMG,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,MAAD,IAAWT,SAAS,CAAC,QAAD,CAA1B;AACA,QAAM,CAACO,KAAD,EAAQG,QAAR,IAAoBX,QAAQ,CAACE,cAAc,CAAC,EAAD,CAAf,CAAlC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAACW,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,OAAT,CAAJ,EACE;AAEFD,IAAAA,QAAQ,CAACT,cAAc,CAAC;AACtBW,MAAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EAAEJ,MAAM,CAACE,OADhB;AAELG,QAAAA,cAAc,EAAEL,MAAM,CAACM;AAFlB,OADe,CAKtB;;AALsB,KAAD,CAAf,CAAR;AAOD,GAXQ,EAWN,CAACN,MAAD,CAXM,CAAT;AAaA,SAAOF,KAAP;AACD,CAlBM;;IAAMC,e;UACMR,S","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\r\nimport {useGlobal} from 'reactn';\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport {LinearProgress} from '@material-ui/core';\r\n\r\nexport const UseThemeContext = createContext({});\r\n\r\nexport const ThemeProviderContext = ({children}) => {\r\n  const theme = useThemeConText();\r\n\r\n  if (!theme)\r\n    return <LinearProgress/>;\r\n\r\n  return (\r\n      <UseThemeContext.Provider value={theme}>\r\n        <ThemeProvider theme={theme}>\r\n          {children}\r\n        </ThemeProvider>\r\n      </UseThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeConText = () => {\r\n  const [colors] = useGlobal('colors');\r\n  const [theme, setTheme] = useState(createMuiTheme({}));\r\n\r\n  useEffect(() => {\r\n    if (!colors?.primary)\r\n      return;\r\n\r\n    setTheme(createMuiTheme({\r\n      props: {\r\n        primaryColor: colors.primary,\r\n        secondaryColor: colors.secondary,\r\n      },\r\n      // and more setting to use\r\n    }));\r\n  }, [colors]);\r\n\r\n  return theme;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}